<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<script type="text/javascript">
//beforeSend 전역변수 처리
const header="${_csrf.headerName}";
const token ="${_csrf.token}";
const mberId = "${param.mberId}";

console.log("mberId : ",mberId);

window.onload = function(){
	console.log("실행되었습니다~ ")
	
	//날짜 포맷 생성  함수
	function dateFormat(date) {
		let dateFormat2 = date.getFullYear() +
		'-' + ( (date.getMonth()+1) < 9 ? "0" + (date.getMonth()+1) : (date.getMonth()+1) )+
		'-' + ( (date.getDate()) < 9 ? "0" + (date.getDate()) : (date.getDate()) );
		return dateFormat2;
	}
	
	// 일자별 날짜 불러오기
	function getDates(startDate, endDate){
		const dateArray = [];
		
		while(startDate <= endDate){
			dateArray.push(startDate.toISOString().split('T')[0]);
			startDate.setDate(startDate.getDate() + 1);
		}
		return dateArray;
	}

	// 방과후버튼 클릭시 생성화면으로 이동하기
	document.querySelector("#addAfterSchool").addEventListener("click", ()=>{
		location.href = "/afterSchool/afterSchoolCreate?schulCode="+"${param.schulCode}";
	});
	
	// 학생 리스트의 결제 완료 버튼 클릭시 수업진행중으로 상태 변경하기
	$(document).on("click",".btnPayDone",function(){
		console.log("결제완료 클릭!");
		
		const atnlcReqstCode = this.closest("tr").querySelector(".atnlcReqstCode").textContent.trim();
		
		let data = {
			"atnlcReqstCode": atnlcReqstCode
		}
		console.log("data : ",data);
		
		$.ajax({
			url : "/afterSchool/lectureStateUpdate",
			contentType : "application/json; charset = utf-8",
			data : JSON.stringify(data),
			type: "post",
			dataType:"json",
			beforeSend : function(xhr){
				xhr.setRequestHeader(header, token);
			},
			success: function(result){
				Swal.fire({
			        title: '학생 상태를 수강중으로 변경하시겠습니까?',
			        text: "수정내용은 바로 반영됩니다.",
			        icon: 'warning',
			        showCancelButton: true,
			        confirmButtonColor: '#3085d6',
			        cancelButtonColor: '#d33',
			        confirmButtonText: '수정',
			        cancelButtonText: '취소',
			        reverseButtons: false, // 버튼 순서 거꾸로
			        
			      }).then((result) => { 
			        if (result.isConfirmed) {
			          Swal.fire(
			            '수강중으로 변경 되었습니다.',
			            '목록으로 이동합니다.',
			            'success'
			          ).then(function(){
			        	  	location.href='/afterSchool/afterSchoolMain?mberId=${memberVO.mberId}';
						});
			        }
			     });
			}
		});
	});
	
	
	// 방과후 학교명 클릭시 해당하는 수강신청한 학생 목록 불러오기
	$(document).on("click",".aAschaNm",function(){
		console.log("클릭이벤트 발생!");
		
		var aschaCode = this.getAttribute("data-ascha-code");
		var schulNm  = ""; // 학교이름
		var cmmnGrade= ""; // 학년
		var clasNm   = ""; // 반
		var clasInNo = ""; // 번호
		var mberNm   = ""; // 학생이름
		var aschaNm  = ""; // 방과후학교 명
		var cmmnDetailCode = ""; 	// 수강신청 상태
		var aschaAtnlcCt   = "";	// 방과후학교 금액
		var moblphonNo =	"";		// 연락처(학부모)
		
		console.log("aschaCode : ",aschaCode);
		
		// 수납 안내 문자 전송
		function sendMsg(idx, aschaVO){
			console.log("수납안내 버튼");
			
			// 문자메시지 내용
			// 문자메시지 내용
			var sendStr = `[\${schulNm} 방과후학교 ] \${mberNm} 학생의 \${aschaNm} 과목이 결제가 되지 않았습니다. 수납 부탁드립니다. 금액 : \${aschaAtnlcCt}원 수납경로 : 방과후학교 > 내자녀 방과후학교 > 결제대기버튼 클릭`;

			
			// 알림 
			Swal.fire({
	            title: '수납안내 문자를 전송하시겠습니까?',
	            text: "",
	            icon: 'warning',
	            showCancelButton: true,
	            confirmButtonColor: '#3085d6',
	            cancelButtonColor: '#d33',
	            confirmButtonText: '전송',
	            cancelButtonText: '취소',
	            reverseButtons: false, // 버튼 순서 거꾸로
	            
	          }).then((result) => { 
	                if (result.isConfirmed) {
	                      Swal.fire(
	                        '미리보기 입니다',
	                        sendStr,
	                        'success'
	                      ).then(function(){
	                        $.ajax({
	                        	url :"/sms/sendMsg",
	                        	type:"post",
	                        	data:JSON.stringify({
	                        		"moblphonNo": "010-7182-8948",
	                        		"msg": sendStr
	                        		}),
	                        	contentType : "application/json",
	                        	dataType : "json",
	                        	async:false,
	                        	beforeSend:function(xhr){
	                        		console.log("Request Data:", xhr);
	                        		xhr.setRequestHeader(header, token);
	                        	},
	                        	success :function(res){
	                        		Swal.fire(
											"문자발송에 성공하였습니다.",
											"목록으로 돌아갑니다.",
											"success"
								          )
			                        console.log("문자보냇습니도");
	                        	},
	                        	error :function(xhr)
	                        	{
	                        		Swal.fire(
											"문자발송에 실패하였습니다.",
											"다시 시도해주세요.",
											"error"
								          )
									console.log(`문자보내기에 실패하였습니다. 에러 내용: ${xhr.status}`);	
	                        	}
	                        })
  
	                      });
	                    }
			});
		}

		// 과목 수강중인 학생 리스트 불러오는 ajax
		$.ajax({
			url: "/afterSchool/lectureStudentList",
			contentType : "application/json;charset=utf-8",
			data: JSON.stringify({
				"aschaCode": aschaCode
				}),
			type: "post",
			dataType: "json",	
			beforeSend: function(xhr){
				xhr.setRequestHeader(header, token);
			},
			success:function(result){
				console.log("result : ", result);
				
				let str = "";
				
				if(result.length ===0){
					str ="<tr><td colspan='8'>수강신청한 학생이 없습니다.</td></tr>"
				}else{
					result.forEach(function(aschaVO, idx){
					
						schulNm  =aschaVO.schulNm  ;
						cmmnGrade=aschaVO.cmmnGrade;
						clasNm   =aschaVO.clasNm   ;
						clasInNo =aschaVO.clasInNo ;
						mberNm   =aschaVO.mberNm   ;
						aschaNm  =aschaVO.aschaNm  ;
						moblphonNo = aschaVO.moblphonNo;
						cmmnDetailCode = aschaVO.cmmnDetailCode;
						aschaAtnlcCt   = aschaVO.aschaAtnlcCt;
						
						// 출석부 날짜 가져오기
						const startDate = new Date(aschaVO.aschaAtnlcBgnde);
						const endDate = new Date(aschaVO.aschaAtnlcEndde);
						const dates = getDates(startDate, endDate); // 시작일부터 종료일까지의 날짜 배열

						console.log(dates);
						
						let dateStr = "<tr><td>날짜/이름</td>";

						// 학생 정보를 담을 배열
						const students = [];
						// 배열에 넣기

						// 각 학생을 열로 추가
						students.forEach(function(student) {
							students.push(mberNm);
						    dateStr += `<td>\${student}</td>`;
						});
						dateStr += "</tr>";

						dates.forEach(function(date) {
						    dateStr += `<tr><td>\${date}</td></tr>`;
						});

						document.querySelector("#table-body").innerHTML = dateStr;
						console.log("dateStr : ", dateStr);


						$(document).on("click","#TabAttend",function(){
							console.log("탭 클릭됨");
						});
						
						$.each(aschaVO.atnlcReqstVOList, function(index, atnlcReqstVO) {
							str +=`
								<tr>
									<td class="atnlcReqstCode" style="display:none;">\${atnlcReqstVO.atnlcReqstCode}</td>
									<td>\${idx+1}</td>
									<td>\${schulNm}</td>
									<td>\${cmmnGrade}학년</td>
									<td>\${clasNm}</td>
									<td>\${clasInNo}</td>
									<td>\${mberNm}</td>
									<td>\${aschaNm}</td>
									<td>`;
							if (cmmnDetailCode==='종강'){
								str += `<button type="button" class="btn btn-custon-rounded-two btn-warning">종강</button>`;
							}else if( cmmnDetailCode==='수업 진행중'){
								str += `<button type="button" class="btn btn-custon-rounded-two btn-primary btnLetureStart">수업 진행중</button>`;
							}else if(cmmnDetailCode==='결제 완료'){
								str += `<button type="button" class="btn btn-custon-rounded-two btn-default btnPayDone">결제 완료</button>`;
							}else if(cmmnDetailCode==='결제 대기'){
								str += `<btton type ="btton" class = "btn btn-custon-rounded-two btn-warning btnPayWait" data-idx ="\${idx}" >결제 대기</button>`
							}else{
								str += `<button type="button" class="btn btn-custon-rounded-two btn-default">취소</button>`;
							}		
							str +=`
								</td>
								</tr>`;

						});

					});
								
				}
				console.log("str : ",str);
				document.querySelector("#lectureStudentListBody").innerHTML = str;
			
				// 결제 대기 버튼 클릭시 문자보내는 이벤트 처리
				$(".btnPayWait").click(function(){
					let idx = $(this).data("idx");
					
					// 해당 학생의 aschaVO를 가지고 온다.
					let aschaVO = result[idx];
					// sendMsg를 호출할 때 aschaVO 객체를 전달한다.
					sendMsg(idx, aschaVO);
				});
				
				

			}
		});
		
	});
	
	// 선생님이 등록한 방과후학교 목록 불러오기
	let data = {
		"mberId" : mberId	
	};
	console.log("data : ", data);
	
	// 선생님이 등록한 방과후학교 목록 불러오는 ajax
	$.ajax({
		url: "/afterSchool/afterSchoolTeacherList",
		contentType: "application/json ; charset=utf-8",
		data: data,
		type: "get",
		dataType: "json",
		beforeSend : function(xhr){
			xhr.setRequestHeader(header, token);
		},
		success:function(result){
			console.log("result : ", result);
			let str = "";

			result.forEach(function(aschaVO, idx){
				let aschaAtnlcBgnde = dateFormat(new Date(aschaVO.aschaAtnlcBgnde));
				let aschaAtnlcEndde = dateFormat(new Date(aschaVO.aschaAtnlcEndde));
				
				str += `
					<tr>
					<td>\${idx+1}</td>
					<td><a data-ascha-code=\${aschaVO.aschaCode} class="aAschaNm">\${aschaVO.aschaNm}</a></td>
					<td>\${aschaVO.aschaAceptncPsncpa}</td>
					<td>\${aschaAtnlcBgnde}</td>
					<td>\${aschaAtnlcEndde}</td>
					<td>`;
					
				if (aschaVO.cmmnAtnlcNm==='종강'){
					str += `<button type="button" class="btn btn-custon-rounded-two btn-warning">종강</button>`;
				}else if(aschaVO.cmmnAtnlcNm==='수업 진행중'){
					str += `<button type="button" class="btn btn-custon-rounded-two btn-primary">수업 진행중</button>`;
				}else if(aschaVO.cmmnAtnlcNm==='신청 진행중'){
					str += `<button type="button" class="btn btn-custon-rounded-two btn-danger">신청 진행중</button>`;
				}else{
					str += `<button type="button" class="btn btn-custon-rounded-two btn-default">폐강</button>`;
				}
				str +=`	
					</td>
					<td>
						<button class="pd-setting btnUpdate" data-aschaCode="\${aschaVO.aschaCode}">수정하기</button>
					</td>
				</tr>`;
	
					
			});
			console.log("str : ", str);
			document.querySelector("#teacherListBody").innerHTML = str;
			
			// 수정 버튼 클릭시 수정화면으로 이동하기
			document.querySelectorAll(".btnUpdate").forEach(function(btn){
					btn.addEventListener("click", ()=>{
						let aschaCode = event.target.getAttribute("data-aschaCode");
						console.log("aschaCode :",aschaCode);
		 				location.href = "/afterSchool/afterSchoolUpdate?aschaCode="+aschaCode+"&schulCode="+"${param.schulCode}";
				});
			});

		}
	});
}


</script>

<style>
.content{
	display: flex;
	justify-content: center;
	align-items: center;
}

.single-product-text {
	padding: 5px;
}

.overflow-scroll {
	height: 650px;
	overflow-y: auto; /* 세로 스크롤 설정 */
}

.class-container {
    width: 800px;
    margin: 8px;
    height: 800px;
    border: 1px solid lightgray;
    border-radius: 5px;
    background-color: white;
}
.btn{
    height: 35px;
    width: 90px;
}
button.pd-setting.btnUpdate {
    background: #df3c3c;
}
.btnPayDone{
    color: #fff;
    background-color: #96DB5B;
    border-color: #96DB5B;
}
</style>
<div class="analytics-sparkle-area">
	${param.mberId}의 방과후교실~

	<div class="container-fluid ">
		<div class="content">
			<div class="class-container">
				<div
					class="courses-inner res-mg-t-30 table-mg-t-pro-n tb-sm-res-d-n dk-res-t-d-n">
					<div class="courses-title">
						<h2>나의 방과후 개설 목록</h2>
						<!-- 방과후학교 생성 -->
						<button type="button" id="addAfterSchool"
							class="btn btn-custon-rounded-four btn-primary">방과후학교 생성</button>
						<hr>
						<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"
							style="padding: 0px;">
							<div class="product-status-wrap drp-lst overflow-scroll"
								style="padding: 0px;">
								<table>
									<thead>
										<tr>
											<th>순번</th>
											<th>방과후학교 명</th>
											<th>수용정원(명)</th>
											<th>수강시작일자</th>
											<th>수강종료일자</th>
											<th>상태</th>
											<th>수정</th>
										</tr>
									</thead>
									<tbody id="teacherListBody">
										<!-- 여기에 테이블 내용 추가 -->
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>
			</div>


			<!-- 수강신청한 학생목록 띄우기 -->
			<div class="class-container">
				<div
					class="courses-inner res-mg-t-30 table-mg-t-pro-n tb-sm-res-d-n dk-res-t-d-n">
					<div class="courses-title">
						<div>
							<h2>수강신청한 학생 목록</h2>
						</div>
						<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"
							style="padding: 0px;">
							<div>
								<div class="admintab-wrap edu-tab1 mg-t-30">
									<ul
										class="nav nav-tabs custom-menu-wrap custon-tab-menu-style1 tab-menu-right">
										<li class=""><a data-toggle="tab" href="#TabStudList"
											aria-expanded="false"><span
												class="edu-icon edu-analytics tab-custon-ic"></span>학생 목록</a></li>
										<li class=""><a data-toggle="tab" href="#TabAttend"
											aria-expanded="false"><span
												class="edu-icon edu-analytics-arrow tab-custon-ic"></span>출석부</a></li>
									</ul>
									<div class="tab-content">
										<div id="TabStudList"
											class="tab-pane flipInY custon-tab-style1 active">
											<div class="product-status-wrap drp-lst overflow-scroll"
												style="padding: 0px;">
												<table>
													<thead>
														<tr>
															<th>순번</th>
															<th>학교</th>
															<th>학년</th>
															<th>반</th>
															<th>번호</th>
															<th>이름</th>
															<th>방과후학교명</th>
															<th>상태</th>
														</tr>
													</thead>
													<tbody id="lectureStudentListBody">
													</tbody>
												</table>
											</div>
										</div>
										<div id="TabAttend" class="tab-pane flipInY custon-tab-style1">
											<h4>출석부에용~</h4>
											<table border="1">
												<thead>
												    <tr id="table-header">
      												<!-- 날짜에 해당하는 열 생성 -->
    												</tr>
												</thead>
												<tbody>
													<tr id="table-body">
													<!-- 테이블 내용 추가될 예정~ -->
													</tr>
												</tbody>
											</table>
										</div>
									</div>
								</div>
							</div>

						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

