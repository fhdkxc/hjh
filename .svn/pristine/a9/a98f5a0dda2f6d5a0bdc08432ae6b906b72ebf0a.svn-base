<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<style>
#FreeBoardContainer h3{
	font-size: 2.2rem;
	text-align: center;
	margin-top: 60px;
	backdrop-filter: blur(4px);
	background-color: rgba(255, 255, 255, 1);
	border-radius: 50px;
	box-shadow: 35px 35px 68px 0px rgba(145, 192, 255, 0.5), inset -8px -8px 16px 0px rgba(145, 192, 255, 0.6), inset 0px 11px 28px 0px rgb(255, 255, 255);
	width: 370px;
	padding-top: 35px;
	padding-bottom: 35px;
	margin: auto;
	margin-top: 50px;
	margin-bottom: 40px;
}

.inputTaskAll{
	width: 1400px;
	margin: auto;
	backdrop-filter: blur(10px);
	background-color: rgba(255, 255, 255, 1);
	border-radius: 50px;
	box-shadow: 0px 35px 68px 0px rgba(145, 192, 255, 0.5), inset 0px -6px 16px 0px rgba(145, 192, 255, 0.6), inset 0px 11px 28px 0px rgb(255, 255, 255);
 	padding: 50px 80px;
}

.FreeBoardAll{
	width: 1400px;
	margin: auto;
	backdrop-filter: blur(10px);
	background-color: rgba(255, 255, 255, 1);
	border-radius: 50px;
	box-shadow: 0px 35px 68px 0px rgba(145, 192, 255, 0.5), inset 0px -6px 16px 0px rgba(145, 192, 255, 0.6), inset 0px 11px 28px 0px rgb(255, 255, 255);
	padding: 50px 80px;
}

.FreeBoardAll .free-cont{
	border: 1px solid #ddd;
	border-radius: 10px;
	padding: 10px 20px;
	min-height: 83px;
	margin-top: 50px;
}
.FreeBoardAll .FreeTit {
	display: flex;
	justify-content: space-between;
	position:relative;
}


.FreeBoardAll .title{
	font-size: 1.8rem;
	font-weight: 700;
	margin-top: 6px;
}

#goToTaskList, #deleteBtn, #updateBtn{
	display:inline-block;
	text-align: center;
	background: #006DF0;
	padding: 15px 30px;
	font-size: 1rem;
	border: none;
	color: #fff;
	font-weight: 700;
	border-radius: 5px;
	margin-top: 30px;
	margin-bottom: 40px;
	margin-right:15px;
}
#deleteBtn{
	background: #111;
	color:#fff;
}

#updateBtn{
	background: #666;
	color:#fff;
}

#goToTaskList:hover,#updateBtn:hover,deleteBtn:hover{
	background: #ffd77a;
	transition: all 1s ease;
	color:#333;
}

.uploadList{
	background: rgb(178 202 255 / 25%);
	backdrop-filter: blur(4px);
	-webkit-backdrop-filter: blur(4px);
	border-radius: 10px;
	border: 1px solid rgba(255, 255, 255, 0.18);
	padding: 15px 20px;
}

.uploadList ul{
	display: block;
}
.uploadList ul li{
	display: block;
	margin-bottom:5px;
}

.uploadList ul li.fileList{
	cursor: pointer;
}
.uploadList ul li.fileList:hover{
	text-decoration: underline;
}

.btn-zone{
	margin: auto;
	text-align: center;
}

.freeInfo{
	display: flex;
	justify-content: flex-start;
	margin-top: 20px;
	padding-left: 10px;
	font-size: 1rem;
}

</style>
<link rel="stylesheet" href="/resources/css/sweetalert2.min.css">
<script src="/resources/css/sweetalert2.min.js"></script>
<script type="text/javascript" src="/resources/js/cjh.js"></script>
<script type="text/javascript" src="/resources/js/jquery.min.js"></script>
<script type="text/javascript" src="/resources/js/commonFunction.js"></script>
<script type="text/javascript">
// 전역 변수
var taskCode = "${taskVO.taskCode}";
var clasCode = "${taskVO.clasCode}";
var atchFileCode = "${taskVO.atchFileCode}";
// var taskResultCode = "";

window.onload = function() {
	// 수정 버튼을 클릭했을 때 발생하는 이벤트
	document.querySelector("#updateBtn").addEventListener("click", () => {
		location.href = "/task/taskUpdateForm?taskCode="+taskCode+"&clasCode="+clasCode;
	});
	
	// 목록으로 가기
	document.querySelector("#goToTaskList").addEventListener("click", () => {
		location.href = "/task/taskList?taskCode="+taskCode+"&clasCode="+clasCode;
	});
};

$(function(){
	// 등록일/마감일 format 처리
	var taskBeginDt = cjh.modelDateFormat("${taskVO.taskBeginDt}");
	var taskEndDt = cjh.modelDateFormat("${taskVO.taskEndDt}");
	
	var data = {
		"taskCode":taskCode
	};
	
	// 과제 제출 현황 리스트 출력
	$.ajax({
		url:"/task/inputTaskList",
		contentType:"application/json;charset=utf-8",
		data:JSON.stringify(data),
		type:"post",
		dataType:"json",
		beforeSend:function(xhr){
	         xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
	    },
		success: function(res){
			console.log("inputTaskList", res);
			
			var str = "";
			
			$.each(res, function(idx, taskResultVO){
				str += "<div class='inputTaskAll' style='width: auto; margin: auto; margin-bottom:50px; margin-top: 40px;'>";
				str += (idx + 1) + ". ";
				str += "<a href='/task/pdfView?atchFileCode="+taskResultVO.atchFileCode+"&atchFileSn="+taskResultVO.atchFileVO.atchFileSn+"'>" + taskResultVO.atchFileVO.atchFileNm + "</a>" + " ";
				str += taskResultVO.clasStdntVO.mberNm + " ";
				str += dateToMinFormat(taskResultVO.taskPresentnDate) + " ";
				str += "<input type='hidden' class='taskResultCode' value='"+taskResultVO.taskResultCode+"'>" + " ";
				str += "<input type='hidden' class='stdntNm' value='"+taskResultVO.clasStdntVO.mberNm+"'>" + " ";
				
				// 로그인 한 아이디와 과제 체줄한 학생의 아이디가 같은 경우
				if("${USER_INFO.mberId}" == taskResultVO.clasStdntVO.mberId){
					// 수정/삭제 버튼 활성화
					str += "<input type='button' id='myTaskDeleteBtn' value='삭제'>";
// 					str += "<input type='button' id='myTaskUpdateBtn' value='수정'>";
					
					// 제출한 과제에 대한 피드백이 있으면 피드백 출력
					if(taskResultVO.fdbck != null){
						str += "<p> ㄴ" +taskResultVO.fdbck+ "</p>";
					}
	
				};
				
				// 로그인 한 아이디가 담임 교사인 경우
				if("${USER_INFO.vwMemberAuthVOList[0].cmmnDetailCode}" == "ROLE_A14002"){
					console.log("${USER_INFO.mberId}");
					// 피드백 등록 버튼 활성화
					str += "<input type='button' id='inputFeedbackBtn' value='피드백 등록'>";
					
					// 본인이 등록한 피드백 출력
					if(taskResultVO.fdbck != null){
						str += "<p> ㄴ" +taskResultVO.fdbck+ "</p>";
					}
				};
				
				str += "</div>";
			});
			
			$("#inputTaskContainer").html(str);
		}
	});
	
	// 과제 제출하기
	$("#taskSubmitBtn").on("click", function(){
		// 업로드한 파일 가져오기
		var file = $("#inputTask")[0].files[0];
		console.log("file", file);
		
		// 과제를 업로드하지 않은  경우 alert
		if(file == null){
			Swal.fire({
			  title: '과제 제출 실패!',
			  text: '파일을 업로드',
			  icon: 'error'
			});
		};
		
		var formData = new FormData();
		
		formData.append("taskCode", taskCode);
		formData.append("uploadFile", file);
		
		$.ajax({
			url:"/task/inputTask",
			processData: false,
    		contentType: false,
			data: formData,
			dataType:"json",
			type:"post",
			beforeSend:function(xhr){
		         xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		    },
			success: function(res){
				alert("제출 완료!!!!!");
				location.href = "/task/taskDetail?taskCode="+taskCode+"&clasCode="+clasCode;
			}
		});
	});
	
	// 피드백 등록
	// inputFeedbackBtn은 동적으로 생성된 버튼이기 때문에 바인딩 필요
	$(document).on("click", "#inputFeedbackBtn", function(){
		var taskResultCode = $(this).closest('.inputTaskAll').find('.taskResultCode').val();
		var stdntNm = $(this).closest('.inputTaskAll').find('.stdntNm').val();
		
		// 피드백 등록 모달 창 띄우기
		$("#feedbackInsertModal").modal("show");

		$("#stdntNm").html(stdntNm + " 학생에게 피드백하기");
		 
		// 피드백 모달 창이 열릴 때 textarea에 포커스 주는 이벤트
		$("#feedbackInsertModal").on("shown.bs.modal", function(){
		    $("#fdbck").focus();
		});
		
		// 피드백 모달 창이 닫힐 때 textarea 초기화
		$("#feedbackInsertModal").on("hidden.bs.modal", function(){
		    $("#fdbck").val("");
		});
		
		// 피드백 insert
		$("#feedbackInsertBtn").on("click", function(){
			var fdbck = $("#fdbck").val();
// 			alert(fdbck);
			
			var data = {
				"taskResultCode":taskResultCode,
				"fdbck":fdbck
			};
	
			$.ajax({
				url: "/task/feedbackInsert",
				contentType: "application/json;charset=utf-8",
				type: "post",
				data: JSON.stringify(data),
				dataType: "json",
				beforeSend:function(xhr){
			         xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			    },
				success: function(res){
					alert("피드백이 등록되었습니다.");
				}
			});
		});
	});
	
		N
	// 제출한 과제 삭제
	// myTaskDeleteBtn은 동적으로 생성된 버튼이기 때문에 바인딩 필요
	$(document).on("click", "#myTaskDeleteBtn", function(){
		console.log("taskResultCode: " + taskResultCode);
		
		Swal.fire({
			title: '진짜 삭제하실?',
			text: '삭제하면 되돌릴 수 없습니다!',
			icon: 'warning',
			
			showCancelButton: true, 		// cancel 버튼 보이기
			confirmButtonColor: '#3085d6',  // confirm 버튼 색깔 지정
			cancelButtonColor: '#d33', 		// cancel 버튼 색깔 지정
			confirmButtonText: '삭제', 		// confirm 버튼 텍스트 지정
			cancelButtonText: '취소', 		// cancel 버튼 텍스트 지정
		}).then(result => {
			// confirm 버튼을 눌렀을 경우,
			if(result.isConfirmed){
// 				Swal.fire('삭제가 완료되었습니다.', '', 'success');
				
				var data = {
					"taskResultCode":taskResultCode
				};
				
				$.ajax({
					url: "/task/myTaskDelete",
					contentType: "application/json;charset=utf-8",
					data: JSON.stringify(data),
					type: "post",
					dataType: "json",
					beforeSend:function(xhr){
				         xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
				    },
					success: function(res){
						alert("삭제 완료!!!!!");
						location.href = "/task/taskDetail?taskCode="+taskCode+"&clasCode="+clasCode;
					}
				});
			};
		});
	});
	
	// 게시글 삭제
	$("#deleteBtn").on("click", function(){
		if(!confirm("정말 삭제하시겠습니까?")){
			return;
		}
		
		var data = {
			"taskCode":taskCode,
			"atchFileCode":atchFileCode
		};
		
		$.ajax({
			url:"/task/taskDelete",
			contentType:"application/json;charset=utf-8",
			data:JSON.stringify(data),
			type:"post",
			dataType:"json",
			beforeSend:function(xhr){
		         xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		    },
			success: function(res){
				alert("삭제 완료~");
				location.href = "/task/taskDetail?taskCode="+taskCode+"&clasCode="+clasCode;
			}
		});
	});
});
</script>
<div id="FreeBoardContainer">
	<form method="post" action="/freeBoard/download" id="freeUploadFrm">
		<input type="hidden" value="" name="atchFileCode" id="atchFileCode">
		<input type="hidden" value="" name="atchFileSn" id="atchFileSn">
		<sec:csrfInput />
	</form>
	<form method="post" action="/freeBoard/updateFreeBoard" id="freeUpdateFrm">
		<input type="hidden" value="" name="atchFileCode" id="atchFileCode3">
		<input type="hidden" value="" name="nttCode" id="nttCode2">
		<input type="hidden" value="" name="nttNm" id="nttNm2">
		<input type="hidden" value="" name="nttCn" id="nttCn2">
		<sec:csrfInput />
	</form>
	<h3>
		<img src="/resources/images/classRoom/task/taskCheck.png" style="width:50px; display:inline-block; vertical-align:middel;">
			과제 게시판
		<img src="/resources/images/classRoom/task/pencil.png" style="width:50px; display:inline-block; vertical-align:middel;">		
	</h3>
<%-- 		<p>${taskVO}</p> --%>
		<div class="FreeBoardAll" style="width: 1400px; margin: auto; margin-bottom:50px; min-height:530px;">
			<div class="FreeTit">
				<input type="text" class="form-control input-sm" style="width:95%;border:none;background: none;height: 50px;font-size: 1.4rem;display: inline-block;vertical-align: middle; margin-bottom:6px;" 
				name="taskSj" id="taskSj" value="${taskVO.taskSj}" readonly>
				<img src="/resources/images/classRoom/freeBrd/line.png" style="position: absolute;left: 0px;top: 10px;z-index: -1;">
			</div>
			<div class="freeInfo">
				<span>
					작성자: ${taskVO.hrtchrVOList[0].memberVOList[0].mberNm}
				</span>
				<span>
					과제 등록일:
					<fmt:formatDate value="${taskVO.taskBeginDt}" pattern="yyyy-MM-dd" /> |
					과제 마감일:
					<fmt:formatDate value="${taskVO.taskEndDt}" pattern="yyyy-MM-dd" />
				</span>
			</div>
			<div class="mb-3" style="display:flex;margin-top:20px;">
				<img src="/resources/images/classRoom/freeBrd/freeFile.png" style="width:40px; display:inline-block;">
				<span style="font-size:1.05rem; display: inline-block; vertical-align: middle;line-height: 2.5;">첨부파일</span> 
				<c:if test="${fn:length(atchFileVOList) > 0}">
				</c:if>
			</div>
			<div class="uploadList">
				<ul>
					<c:choose>
						<c:when test="${fn:length(atchFileList) > 0}">
							<c:forEach var="atchFileVO" items="${atchFileList}" varStatus="status">
									<li class="fileList" data-atch-file-code ="${atchVO.atchFileCode}" 
									data-atch-file-sn="${atchFileVO.atchFileSn}" data-atch-file-nm="${atchFileVO.atchFileNm}">
										<img alt="${atchFileVO.atchFileNm}파일 다운로드" src="/resources/images/classRoom/freeBrd/free-download-solid.png" style="width:15px; height: 15px; margin-bottom:3px;"> 
										<a href="/task/pdfView?atchFileCode=${atchFileVO.atchFileCode}&atchFileSn=${atchFileVO.atchFileSn}">${atchFileVO.atchFileNm}</a>
									</li>
							</c:forEach>
						</c:when>
						<c:otherwise>
							<li>
								<p style="margin-bottom:0px;">
									<img alt="파일이 미존재 시 파일 아이콘 " src="/resources/images/classRoom/freeBrd/free-file-solid.png" 
									style="width: 13px;margin-right: 2px; margin-bottom: 3px;">
									첨부된 파일이 없습니다.
								</p>
							</li>
						</c:otherwise>
					</c:choose>
				</ul>
			</div>
		<div class="free-cont">
			​​​​​​​​<div id="smarteditor">
				<div id="taskCn" style="width:412px;" style="border:1px solid #ddd;">
					${taskVO.taskCn}
				</div>
			</div>
		</div>
		<div class="btn-zone">
			​​​​​​​​<input type="button" value="목록" id="goToTaskList"/>
			<c:if test="${USER_INFO.mberId == taskVO.hrtchrVOList[0].mberId || USER_INFO.vwMemberAuthVOList[0].cmmnDetailCode == 'ROLE_A14002'}">
				​​​​​​​​<input type="button" value="수정" id="updateBtn"/> 
				​​​​​​​​<input type="button" value="삭제" id="deleteBtn"/>
			</c:if>
		</div>
		<hr>
		<div class="FreeTit">
			<p class="form-control input-sm" style="text-align:center; width:95%;border:none;background: none;height: 50px;font-size: 1.4rem;display: inline-block;vertical-align: middle; margin-bottom:6px;">
				★과제 제출하는 곳★
			</p>
		</div>
		<div class="mb-3" style="display:flex;margin-top:20px;">
			<img src="/resources/images/classRoom/freeBrd/freeFile.png" style="width:40px; display:inline-block;">
			<span style="font-size:1.05rem; display: inline-block; vertical-align: middle;line-height: 2.5;">첨부파일</span> 
		</div>
		<form action="/task/inputTask" method="post">
			<div class="uploadList">
				<input type="file" id="inputTask" name="inputTask">
			</div>
			<div style="display:flex; justify-content: center; padding: 20px;">
				<input type="button" value="제출하기" id="taskSubmitBtn" class="btn btn-primary waves-effect waves-light">
			</div>
		</form>
		<div id="inputTaskContainer">
<!-- 			<div class="FreeBoardAll" style="width: auto; margin: auto; margin-bottom:50px; margin-top: 40px;"> -->
<!-- 				<p></p> -->
<!-- 			</div> -->
		</div>
	</div>
</div>

<!-- 피드백을 등록하는 모달 -->
<div id="feedbackInsertModal"
	class="modal modal-edu-general default-popup-PrimaryModal fade"
	role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-close-area modal-close-df">
				<a class="close" data-dismiss="modal" href="#">
				<i class="fa fa-close"></i></a>
			</div>
			<div class="modal-body">
				<h3>피드백 등록</h3>
				<hr>
				<div class="form-group res-mg-t-15">
					<p id="stdntNm"></p>
                 	<textarea id="fdbck" name="fdbck" placeholder="내용을 입력해 주세요" style="resize: none; height: 220px;"></textarea>
                </div>
			<input type="button" value="등록" id="feedbackInsertBtn" class="btn btn-primary waves-effect waves-light">
			</div>
		</div>
	</div>
</div>