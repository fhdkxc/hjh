package kr.or.ddit.approval.service.impl;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.approval.mapper.ApprovalMapper;
import kr.or.ddit.approval.service.ApprovalService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.SanctnDocSearchVO;
import kr.or.ddit.vo.SanctnDocVO;
import kr.or.ddit.vo.VwStdntStdnprntVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class ApprovalServiceImpl implements ApprovalService {
	
	@Autowired
	ApprovalMapper approvalMapper;
	
	@Autowired
	String uploadFolder;
	
	//교외체험학습 관련 학부모와 학생의 정보
	@Override
	public VwStdntStdnprntVO studentInfo(VwStdntStdnprntVO vwStdntStdnprntVO) {
		return this.approvalMapper.studentInfo(vwStdntStdnprntVO);
	}
	
	//체험학습 신청서 등록
	@Override
	public int insertDoc(SanctnDocVO sanctnDocVO) {
		return this.approvalMapper.insertDoc(sanctnDocVO);
	}
	
	//학부모-체험학습 문서 목록 데이터
	@Override
	public ArticlePage<SanctnDocVO> loadSanctnDocList(SanctnDocSearchVO sanctnDocSearchVO) {
		log.info("loadSanctnDocList->sanctnDocSearchVO전 : " + sanctnDocSearchVO);
		String clasStdntCode = sanctnDocSearchVO.getClasStdntCode();
		String keyword = sanctnDocSearchVO.getKeyword();
		int currentPage = sanctnDocSearchVO.getCurrentPage();
		int size = sanctnDocSearchVO.getSize();
		
		log.info("loadSanctnDocList->sanctnDocSearchVO후 : " + sanctnDocSearchVO);
		
		//학부모-체험학습 문서 갯수 
		int total = this.approvalMapper.getApprovalTotal(sanctnDocSearchVO);
		log.info("loadSanctnDocList->total : " + total);
		
		List<SanctnDocVO> sanctnDocVOList = this.approvalMapper.loadSanctnDocList(sanctnDocSearchVO);
		log.info("loadSanctnDocList->sanctnDocVOList : " + sanctnDocVOList);
		
		ArticlePage<SanctnDocVO> sanctnDocPage = new ArticlePage<SanctnDocVO>(total, currentPage, size, sanctnDocVOList, keyword, clasStdntCode);
		log.info("loadSanctnDocList->sanctnDocPage : " + sanctnDocPage);
		return sanctnDocPage;
	}
	
	//학부모-체험학습 문서 목록 상세
	@Override
	public SanctnDocVO approvalDetail(String docCode) {
		return this.approvalMapper.approvalDetail(docCode);
	}

	//학부모-체험학습 문서 수정
	@Override
	public int approvalUpdate(SanctnDocVO sanctnDocVO) {
		return this.approvalMapper.approvalUpdate(sanctnDocVO);
	}
	
	//학부모-체험학습 문서 삭제
	@Override
	public int approvalDelete(SanctnDocVO sanctnDocVO) {
		return this.approvalMapper.approvalDelete(sanctnDocVO);
	}
	
	//선생님-체험학습 문서 목록 데이터
	@Override
	public ArticlePage<SanctnDocVO> loadSanctnDocListT(SanctnDocSearchVO sanctnDocSearchVO) {
		log.info("loadSanctnDocList->sanctnDocSearchVO전 : " + sanctnDocSearchVO);
		String clasCode = sanctnDocSearchVO.getClasCode();
		String keyword = sanctnDocSearchVO.getKeyword();
		int currentPage = sanctnDocSearchVO.getCurrentPage();
		int size = sanctnDocSearchVO.getSize();
		
		log.info("loadSanctnDocListT->sanctnDocSearchVO후 : " + sanctnDocSearchVO);
		
		//선생님-체험학습 문서 갯수 
		int total = this.approvalMapper.getApprovalTotalT(sanctnDocSearchVO);
		log.info("loadSanctnDocListT->total : " + total);
		
		List<SanctnDocVO> sanctnDocVOList = this.approvalMapper.loadSanctnDocListT(sanctnDocSearchVO);
		log.info("loadSanctnDocListT->sanctnDocVOList : " + sanctnDocVOList);
		
		ArticlePage<SanctnDocVO> sanctnDocPage = new ArticlePage<SanctnDocVO>(total, currentPage, size, sanctnDocVOList, keyword, clasCode);
		log.info("loadSanctnDocListT->sanctnDocPage : " + sanctnDocPage);
		return sanctnDocPage;
	}
	
	//선생님-체험학습신청 거절
	@Override
	public int approvalRefuse(SanctnDocVO sanctnDocVO) {
		return this.approvalMapper.approvalRefuse(sanctnDocVO);
	}
	
	//담임 선생님-체험학습신청 결재
	@Override
	public int approvalTchrSign(SanctnDocVO sanctnDocVO, MultipartFile uploadFile) {
		// 파일객체가 있다면 폴더생성
		if (uploadFile != null && uploadFile.getSize() > 0) {
			//C:/eGovFrameDev-3.10.0-64bit/workspace/Doodle/src/main/webapp/resources/upload/profile/<-이미지
			File fileFolder = new File(uploadFolder + "\\sign\\");
			fileFolder.mkdirs();
			
			String uploadFileName = uploadFile.getOriginalFilename();
			
			//체험학습 신청 문서에 서명 이미지 저장
			sanctnDocVO.setTcherSanctn(uploadFileName);
			
			String savePath = uploadFolder + "\\sign\\" + uploadFileName;
			
			File file = new File(savePath);
			
			try {
				//파일업로드
				uploadFile.transferTo(file);
				
				int result = this.approvalMapper.approvalTchrSign(sanctnDocVO);
				
				return result;
			} catch (IllegalStateException | IOException e) {
				e.printStackTrace();
			}
		}
		return 0;
	}
	
}
