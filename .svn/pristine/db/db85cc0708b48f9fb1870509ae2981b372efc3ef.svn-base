<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<script type="text/javascript" src="/resources/js/jquery.min.js"></script>    
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- 4.4.2 -->
<script type="text/javascript" src="/resources/js/commonFunction.js"></script>  
<script type="text/javascript" src="/resources/js/cjh.js"></script>  

<style>
.resDiv {
	display:inline-block;
	vertical-align:text-top;
}
textarea {
	resize: none;
}
</style>

<script>
// 테이블 가로 길이
var rowsCount = 0;
// 통계를 위한 학생명과 점수
var stdRes = {};
// 학생용 통계를 위한 변수
var myScore = 0;
var classScore = 0;

<sec:authorize access ="hasRole('A01002')">
rowsCount =6;
</sec:authorize>
<sec:authorize access ="hasAnyRole('A01001', 'A01003')">
rowsCount =5;
</sec:authorize>

window.onload = function(){
	// 시험 정보
	var unitEvlObj;
	
	// 시험 정보 
	getUnitTestDetail();
	// 시험 응시 학생
	getGcList();
	
	// 테이블 가로 길이 설정
	document.querySelector("#ueResDefaultTd").colspan = rowsCount;
	
	// 교사의 학생 성적 차트
	<sec:authorize access ="hasRole('A01002')">
	getScoreList();
	</sec:authorize>
}

// 시험 정보
const getUnitTestDetail = function(){
	// 교사는 답안 정보 보임
	<sec:authorize access ="hasRole('A01002')">
	document.querySelector("#aswperViewer").style.display = "block";
	</sec:authorize>
	
	$.ajax({
		url :"/unitTest/getUnitTestDetail",
	    type:"post",
	    data:"${unitEvlCode}",
	    contentType:"application/json",
	    dataType:"json",
	    beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		},
		success : function(res) {
			
			/*
			단원평가 기본 정보
			*/
			cjh.selOne("#unitTestNm").innerHTML = res.unitEvlNm;
			cjh.selOne("#unitStartDate").innerHTML = dateToMinFormat(res.unitEvlBeginDt);
			cjh.selOne("#unitEndDate").innerHTML = dateToMinFormat(res.unitEvlEndDt);
			
			/*
			문항 
			*/
			let num = 1;
			res.quesVOList.forEach(function(item, idx){
				// 구조 복사
				let clone = document.querySelector("#quesDiv").cloneNode(true);
				let quesCon = document.querySelector("#quesContainer");
				
				// 메인 div id 변경
				let cloneId = clone.id;
				cloneId = cloneId + ++num;
				clone.id = cloneId;
				// 보이게 변경
				clone.style = "display:block;";
				// 문서 붙여넣기
				quesCon.append(clone);
				
				// 요소 찾기
				let quesNo     = cjh.selOne("#"+cloneId+" .no")          ;
				let quesQues   = cjh.selOne("#"+cloneId+" .ques")        ;
				let quesCnsr   = cjh.selOne("#"+cloneId+" .cnsr")        ;
				let quesAllot  = cjh.selOne("#"+cloneId+" .allot")       ;
				let quesExplna = cjh.selOne("#"+cloneId+" .explna")      ;

				noLabels       = cjh.selOne("#"+cloneId+" .noLabel")     ;
				quesLabels     = cjh.selOne("#"+cloneId+" .quesLabel")   ;
				allotLabels    = cjh.selOne("#"+cloneId+" .allotLabel")  ;
				cnsrLabels     = cjh.selOne("#"+cloneId+" .cnsrLabel")   ;
				explnaLabels   = cjh.selOne("#"+cloneId+" .explnaLabel") ;
				
				// id, name, value 변경
				quesNo.innerHTML = idx+1+"번 문제";
				quesQues.id      = "quesQues"  +cloneId;
				quesQues.name    = "quesQues"  +cloneId;
				quesQues.innerHTML = item.quesQues;
				quesCnsr.id      = "quesCnsr"  +cloneId;
				quesCnsr.name    = "quesCnsr"  +cloneId;
				quesCnsr.value = item.quesCnsr;
				quesAllot.id     = "quesAllot" +cloneId;
				quesAllot.name   = "quesAllot" +cloneId;
				quesAllot.value = item.quesAllot;
				quesExplna.id    = "quesExplna"+cloneId;
				quesExplna.name  = "quesExplna"+cloneId;
				quesExplna.innerHTML = item.quesExplna;
				
				noLabels.setAttribute(    "for", "quesNo"    +cloneId);
				quesLabels.setAttribute(  "for", "quesQues"  +cloneId);
				allotLabels.setAttribute( "for", "quesCnsr"  +cloneId);
				cnsrLabels.setAttribute(  "for", "quesAllot" +cloneId);
				explnaLabels.setAttribute("for", "quesExplna"+cloneId);
				
				// (학생) 응시 기간이 지나면 버튼 상태 종료됨.
				<sec:authorize access="hasAnyRole('A01001', 'A01003')">
					if(cjh.isPastDate(dateToMinFormat(res.unitEvlEndDt))){
						let btn = document.querySelector("#examBtn");
						btn.innerHTML = "응시 기간 종료";
						btn.className = "d-div-gray";
						btn.disabled = "true";
						btn.style ="width:100%";
					}
				</sec:authorize>
			});
			
			// 원본 삭제
			document.querySelector("#quesDiv").remove;

			// textarea 높이 조절
			document.querySelectorAll("textarea").forEach(function(item, idx){
				item.style.height = 'auto';
			    item.style.height = item.scrollHeight + 35 + 'px';
			});
		}
	})
}

// 학생 시험 결과
const getGcList = function(){
	let urlStr = "";
	
	<sec:authorize access ="hasRole('A01002')">
	urlStr ="/unitTest/getGcList";
	</sec:authorize>
	<sec:authorize access ="hasAnyRole('A01001', 'A01003')">
	urlStr ="/unitTest/getStdGc";
	</sec:authorize>
			
	$.ajax({
		url :urlStr,
	    type:"post",
	    data:"${unitEvlCode}",
	    contentType:"application/json",
	    dataType:"json",
	    beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		},
		success : function(res) {
			console.log("res:",res);
			
			let str = "";

			if(res.length == 0){
				str = `<tr><td colspan="\${rowsCount}" style="text-align: center;">등록된 단원평가가
					    없습니다..</td></tr>`
				document.querySelector("#listTbody").innerHTML = str;
				return;
			}
			
			res.forEach(function(item, index){
// 				oneRes = {"stdName": item.clasStdntVOList[0].memberVOList[0].mberNm, "stdScore", item.scre};

				// (학생) 통계 성적
				<sec:authorize access="hasAnyRole('A01001', 'A01003')">
				myScore = item.scre;
				classScore = item.avgClasScore;
				</sec:authorize>
				
				str += `
						<tbody>
						<tr>
						<td>\${item.clasStdntVOList[0].clasInNo}</td>
						<td>\${item.clasStdntVOList[0].memberVOList[0].mberNm}</td>
						<td>\${dateToMinFormat(item.gcDate)}</td>
						<td>\${item.scre}</td>
						<td style="text-align: center"><button onclick="showResDet('\${item.clasStdntCode}')" class = "d-btn-blue">보기</button></td>
						`
				
				// (교사) 학생 성적표 삭제 버튼
				<sec:authorize access="hasRole('A01002')">
				str +=  `<td style="text-align: center"><button onclick="deleteStdRes('\${item.clasStdntCode}')" class ="d-btn-red">삭제</button></td>`;
				</sec:authorize>
				
				str +=	`</tr>
						<tbody>`;
						
				// (학생) 이미 시험을 본 학생이면 버튼 비활성화
				if(item.clasStdntVOList[0].mberId == "${USER_INFO.mberId}"){
					let btn = document.querySelector("#examBtn");
					btn.innerHTML = "응시 완료";
					btn.className = "d-div-green";
					btn.disabled = "true";
					btn.style ="width:100%";
					
					// 답안 결과 보임.
					document.querySelector("#aswperViewer").style.display = "block";
					
					// 차트
					drawChart(null);
				}
			})
			if(res.length > 0){
				document.querySelector("#listTbody").innerHTML = str;
			}
		}
	})
}

// 단원평가 응시 버튼 클릭 (form post)
const goExamConfirmForm = function(){
	var result = confirm("시험 응시 도중 시험을 중단하면 두 번 다시는 시험을 볼 수 없습니다. 시험 전 컴퓨터 네트워크 상태를 확인해주세요. 시험을 응시하러 가시겠습니까?");	
	return result;
}

// 학생 답안 출력
const showResDet = function(stdCode){
	console.log("학생 답안 상세 출력");
	
	if(stdCode==null){
		let str =`<tr><td rowspan="2" style="text-align :center;">학생 답안 상세</td></tr>`
		document.querySelector("#aswperTbody").innerHTML = str;
		return;
	}
	$.ajax({
		url:"/unitTest/getAswper",
		type:"post",
		contentType:"application/json",
		data:JSON.stringify({"unitEvlCode":"${unitEvlCode}",
			   "clasStdntCode":stdCode}),
		dataType:"json",
	   	beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		},
		success:function(res){
			let str = "";
			res.forEach(function(item, index){
				str +=`<tr>
					   <th>\${item.quesNo}번 문제</th>
					   <td>\${item.aswperCn}</td>
					   </tr>`
			})

			document.querySelector("#aswperTbody").innerHTML = str;
		}
	});
}

// 학생 답안 삭제
const deleteStdRes = function(stdCode){
	if(confirm("학생 답안 결과를 삭제하시겠습니까?")){
		$.ajax({
			url :"/unitTest/deleteStdRes",
		    type:"post",
		    data:JSON.stringify({"unitEvlCode":"${unitEvlCode}",
		    	  				 "clasStdntCode":stdCode}),
		    contentType:"application/json",
		    dataType:"text",
		    beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
			success : function(res) {
				if(res>0){
					alert("성적표 및 답안이 정상적으로 삭제되었습니다.");
					getGcList(); 	  // 새로고침
					showResDet(null); // 답안 상세칸 없앰
				}
			}
		})
	}
}

// 시험 삭제
const deleteUnitTest = function(){
	if(confirm("해당 단원평가를 삭제하시겠습니까?~~~")){
		$.ajax({
			url :"/unitTest/deleteUnitTest",
		    type:"post",
		    data:"${unitEvlCode}",
		    contentType:"application/json",
		    dataType:"json",
		    async : false,
		    beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
			success : function(res) {
				if (res >0){
					alert("단원평가 삭제가 완료되었습니다.(기능 아직 미구현)");
					location.href ="/unitTest/list";
				}else{
					alert("단원평가  삭제에 실패했습니다.");
				}
			}
		})
	}
}

// chartjs
// 4.4.2
const drawChart = function(scoreData){
	const ctx = document.querySelector('#myChart');
	ctx.style.display ="block";
	let chartType     = "bar";
	let chartLabel    = [];
	let chartData	  = [{
						data:[],
					    borderWidth:1,
					    backgroundColor:[]
					    }];
	let chartOptions  = null;
	
	// 학생, 학부모
	<sec:authorize access="hasRole('A01001')">
	chartLabel.push("내점수");
	chartLabel.push("반평균");
	chartData[0].data.push(myScore);
	chartData[0].data.push(classScore);
	chartData[0].backgroundColor.push('#FCC25BB0');
	chartData[0].backgroundColor.push('#ccccccb0');
	
	chartOptions = {
    	responsive: false,
    	indexAxis : 'y', // 가로 차트

        scales: {
            x: {
                beginAtZero: true,
            	max :100,
	        	ticks:{
	        		stepSize:5
	        	},
            },
        },
        plugins: {
            legend: {
              display: false
            },
        },
	}
	</sec:authorize>
	
	// 교사
	<sec:authorize access="hasRole('A01002')">
	
	chartData[0].maxBarThickness =[];
	console.log("charData[0]",chartData[0]);

	// 반평균 점수 put
		chartLabel.push("평균 점수");
		chartData[0].data.push(scoreData.avgClasScore);
		chartData[0].backgroundColor.push('#ccccccb0');
		chartData[0].maxBarThickness.push("200");
	
	// 학생 정보 put
	for(let i = 0; i < scoreData.unitEvlScoreVOList.length; ++i){
		chartLabel.push(scoreData.unitEvlScoreVOList[i].mberNm);
		chartData[0].data.push(scoreData.unitEvlScoreVOList[i].scre);
		chartData[0].backgroundColor.push('#FCC25BB0');
		chartData[0].maxBarThickness.push("200");
	}
	
	chartOptions = {
    	responsive: false,

        scales: {
            y: {
                beginAtZero: true,
            	max :100,
	        	ticks:{
		         	stepSize :5,
	        	},
            },
        },
        plugins: {
            legend: {
              display: false
            }
        },
	}	
	ctx.style.height = "300px";
	</sec:authorize>
	
	let myChart = new Chart(ctx, {
	    type: chartType,
	    data: {
	        labels: chartLabel,
	        datasets: chartData,
	    },
	    options: chartOptions
	});
	
	myChart.update();
}

// 하나의 단원평가에 대한 모든 반학생 성적 get
const getScoreList = function(){
	$.ajax({
		url :"/unitTest/getAllStdScoreInOneUnitEvl",
	    data:"${unitEvlCode}",
	    contentType:"application/json",
        type:"post",
        dataType:"json",
        async:false,
        beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		},
        success:function(res){
			console.log("getScoreList:",res);
			drawChart(res);
        }
	})
}


</script>

<!-- post로 화면 이동 form -->
<form id = "postForm" action ="" method ="post">
	<input type = "text" id ="unitEvlCode" name = "unitEvlCode" value ="" style="display:none;">
	<sec:csrfInput />
</form>

<!-- 헤더 -->
<jsp:include page="unitTestHeader.jsp" flush="true"/>
<script>document.querySelector(".bread-blod").innerHTML = "생성";</script>

<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
	<div class="product-status mg-b-15">
		<div class="container-fluid" >
			<div class="row">
				<sec:authorize access="hasRole('A01002')">
					<button class="btn btn-danger pull-right"
					onclick="deleteUnitTest()" style="margin: 1px;">단원평가
					삭제하기</button>
					<form id = "modForm" action="/unitTest/modify" method="post">
						<input type ="text" name = "unitEvlCode" value = "${unitEvlCode}" style="display:none;">
						<button class="btn pull-right btn-default " style = "submit"
							 style="margin: 1px;">단원평가
							수정하기</button>
							<sec:csrfInput />
					</form>
				</sec:authorize>
			</div>
		
			<div class="row">
				<div class="product-status-wrap" style="position: relative;">
					<div class="asset-inner">
						<form action="/unitTest/exam" method="post"
							onsubmit="return goExamConfirmForm();">
							<input type="text" name="unitEvlCode" style="display: none;"
								value="${unitEvlCode}">
							<table>
								<thead>
									<tr>
										<th style ="width:50%">단원평가 명</th>
										<th>시작 일시</th>
										<th>종료 일시</th>
										<sec:authorize access="hasRole('A01001')">
											<th style="text-align: center;">상태</th>
										</sec:authorize>
									</tr>
								</thead>
								<tbody id="">
									<tr>
										<td id="unitTestNm"></td>
										<td id="unitStartDate"></td>
										<td id="unitEndDate"></td>
										<td id="" style="text-align: center">
											<sec:authorize access="hasRole('A01001')">
												<button class="d-btn d-btn-blue" id="examBtn"
													type="submit" style="width: 100%;">단원평가
													실시하기</button>
											</sec:authorize>
										</td>
									</tr>
								</tbody>
							</table>
							<sec:csrfInput />
						</form>

						<div id="examAlarm"></div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


<!-- 정답지 -->
<div id = "aswperViewer" class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style = "display:none;">
	<div class="product-status mg-b-30">
		<div class="container-fluid">
			<div class="row">
				<div class="alert-title">
					<p></p>
					<div class="panel-group edu-custon-design" id="accordion">
						<div class="panel panel-default">

							<div class="panel-heading accordion-head" style="padding:0px;">
								<h4 class="panel-title" style="height:50px; vertical-align: middle;">
									<a data-toggle="collapse" data-parent="#accordion"
										href="#collapse1" class="collapsed" aria-expanded="false"
										style="display: block; width:100%; height:100px; padding:10px;"> 단원평가 정답 보기</a>
								</h4>
							</div>
							<div id="collapse1" class="panel-collapse panel-ic collapse"
								aria-expanded="false" style="height: 0px;">
								<div id="quesContainer" class="panel-body admin-panel-content animated bounce">

									<div id="quesDiv" style="display: none;">
										<!-- 문제 번호 -->
										<div class="form-group-inner">
											<div class="row">
												<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
													<label class="login2 pull-right pull-right-pro noLabel"><span
														class="no">1번 문제</span></label>
												</div>
												<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12"></div>
											</div>
										</div>

										<!-- 지문 -->
										<div class="form-group-inner">
											<div class="row">
												<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
													<label class="login2 pull-right pull-right-pro quesLabel"
														for="quesQues">지문</label>
												</div>
												<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12">
													<textarea rows="2" class="form-control ques"
														name="quesQues" id="quesQues" readonly></textarea>
												</div>
											</div>
										</div>

										<!-- 배점 -->
										<div class="form-group-inner">
											<div class="row">
												<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
													<label class="login2 pull-right pull-right-pro allotLabel"
														for="quesAllot">배점</label>
												</div>
												<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12">
													<input type="text" class="form-control allot"
														name="quesAllot" id="quesAllot" readonly>
												</div>
											</div>
										</div>

										<!-- 정답 -->
										<div class="form-group-inner">
											<div class="row">
												<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
													<label class="login2 pull-right pull-right-pro cnsrLabel"
														for="cnsr">정답</label>
												</div>
												<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12">
													<input type="text" class="form-control cnsr" name="cnsr"
														id="cnsr" readonly>
												</div>
											</div>
										</div>

										<!-- 해설 -->
										<div class="form-group-inner">
											<div class="row">
												<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
													<label class="login2 pull-right pull-right-pro explnaLabel"
														for="quesExplna">해설</label>
												</div>
												<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12">
													<textarea rows="4" class="form-control explna"
														name="quesExplna" id="quesExplna" readonly></textarea>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


<!-- 학생의 차트 -->
<div style="width:100%; ">
	<canvas id="myChart" style="height:200px; width:100%; display :none;"></canvas>
</div>


<!-- 학생 단원평가 결과 -->
<sec:authorize access="hasAnyRole('A01001', 'A01003')">
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
</sec:authorize>
<sec:authorize access="hasRole('A01002')">
<div class="col-lg-9 col-md-9 col-sm-12 col-xs-12">
</sec:authorize>
	<div class="product-status mg-b-15">
		<div class="container-fluid">
			<div class="row">
				<div class="product-status-wrap" style="position: relative;">
					<div class="asset-inner resDet">
						<table>
							<thead>
								<tr>
									<th>학급 번호</th>
									<th style ="width:40%">학생명</th>
									<th>응시 일시</th>
									<th>성적</th>
									<th style="text-align: center;">상세</th>
									<sec:authorize access="hasRole('A01002')">
										<th style="text-align: center">삭제</th>
									</sec:authorize>
								</tr>
							</thead>
							<tbody id="listTbody">
								<tr>
									<td id = "ueResDefaultTd" colspan="5" style="text-align: center;">등록된 단원평가가
										없습니다..</td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<sec:authorize access="hasAnyRole('A01001', 'A01003')">
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
</sec:authorize>
<sec:authorize access="hasRole('A01002')">
<div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
</sec:authorize>
	<div class="product-status mg-b-30">
		<div class="container-fluid">
			<div class="row">
				<div class="product-status-wrap" style="position: relative;">
					<div class="asset-inner resDet">
						<table>
							<thead>
								<tr>
									<th colspan="2"style="text-align: center;">학생 답안</th>
								</tr>
								<tr>
							</thead>
							<tbody id = "aswperTbody">
								<tr>
									<td colspan = "2" style="text-align: center;">학생 답안 상세</td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
	<div class="product-status mg-b-30">
		<div class="container-fluid">
			<div class="row" style = "text-align: center">
				<button class="d-btn-black pull-right"
					onclick="location.href='/unitTest/list'">목록으로 돌아가기</button>
			</div>
		</div>
	</div>
</div>
