<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.approval.mapper.ApprovalMapper">
	
	<sql id="where">
      <if test="keyword!=null and keyword!=''">
         AND (
               NTT_NM LIKE '%' || #{keyword} || '%'
            OR   NTT_CN LIKE '%' || #{keyword} || '%'
            OR   MBER_ID LIKE '%' || #{keyword} || '%'
         )
      </if>
   </sql>
	
	<resultMap type="familyRelateVO" id="familyRelateMap">
		<result property="schulCode" column="SCHUL_CODE"/>
		<result property="stdntId" column="STDNT_ID"/>
		<result property="stdnprntId" column="STDNPRNT_ID"/>
		<result property="cmmnDetailCode" column="CMMN_DETAIL_CODE"/>
		
		<association property="stdntVO" resultMap="stdntMap"></association>
		<association property="parentVO" resultMap="parentMap"></association>
		
		<association property="clasStdntVO" resultMap="clasStdntMap"></association>
		<association property="schulVO" resultMap="schulMap"></association>
		<association property="schulPsitnMberVO" resultMap="schulPsitnMberMap"></association>
		
	</resultMap>
	
	<resultMap type="memberVO" id="stdntMap">
		<result property="mberId" column="MBER_ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="mberNm" column="MBER_NM"/>
		<result property="ihidnum" column="IHIDNUM"/>
		<result property="moblphonNo" column="MOBLPHON_NO"/>
		<result property="mberEmail" column="MBER_EMAIL"/>
		<result property="zip" column="ZIP"/>
		<result property="mberAdres" column="MBER_ADRES"/>
		<result property="mberImage" column="MBER_IMAGE"/>
		<result property="mberSecsnAt" column="MBER_SECSN_AT"/>
		<result property="cmmnDetailCode" column="CMMN_DETAIL_CODE"/>
	</resultMap>
	
	<resultMap type="memberVO" id="parentMap">
		<result property="mberId" column="MBER_ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="mberNm" column="MBER_NM"/>
		<result property="ihidnum" column="IHIDNUM"/>
		<result property="moblphonNo" column="MOBLPHON_NO"/>
		<result property="mberEmail" column="MBER_EMAIL"/>
		<result property="zip" column="ZIP"/>
		<result property="mberAdres" column="MBER_ADRES"/>
		<result property="mberImage" column="MBER_IMAGE"/>
		<result property="mberSecsnAt" column="MBER_SECSN_AT"/>
		<result property="cmmnDetailCode" column="CMMN_DETAIL_CODE"/>
	</resultMap>
	
	<resultMap type="clasVO" id="clasMap">
		<result property="clasCode" column="CLAS_CODE"/>
		<result property="clasNm" column="CLAS_NM"/>
		<result property="clasYear" column="CLAS_YEAR"/>
		<result property="cmmnGrade" column="CMMN_GRADE"/>
		<result property="cmmnClasSttus" column="CMMN_CLAS_STTUS"/>
		<result property="schulCode" column="SCHUL_CODE"/>
		<result property="beginTm" column="BEGIN_TM"/>
		<result property="endTm" column="END_TM"/>
	</resultMap>
	
	<resultMap type="clasStdntVO" id="clasStdntMap">
		<result property="clasStdntCode" column="CLAS_STDNT_CODE"/>
		<result property="clasInNo" column="CLAS_IN_NO"/>
		<result property="cmmnStdntClsf" column="CMMN_STDNT_CLSF"/>
		<result property="cmmnClasPsitnSttus" column="CMMN_CLAS_PSITN_STTUS"/>
		<result property="clasCode" column="CLAS_CODE"/>
		<result property="schulCode" column="SCHUL_CODE"/>
		<result property="mberId" column="MBER_ID"/>
		<result property="clasStdntJoinDate" column="CLAS_STDNT_JOIN_DATE"/>
		<result property="clasStdntExitDate" column="CLAS_STDNT_EXIT_DATE"/>
		
		<association property="clasVO" resultMap="clasMap"></association>
	</resultMap>
	
	<resultMap type="schulVO" id="schulMap">
		<result property="schulCode" column="SCHUL_CODE"/>
		<result property="schulNm" column="SCHUL_NM"/>
		<result property="schulAdres" column="SCHUL_ADRES"/>
		<result property="schulTlphonNo" column="SCHUL_TLPHON_NO"/>
		<result property="schulAnnvrsry" column="SCHUL_ANNVRSRY"/>
	</resultMap>
	
	<resultMap type="schulPsitnMberVO" id="schulPsitnMberMap">
		<result property="rnum" column="RNUM"/>
		<result property="schulCode" column="SCHUL_CODE"/>
		<result property="mberId" column="MBER_ID"/>
		<result property="cmmnSchulPsitnSttus" column="CMMN_SCHUL_PSITN_STTUS"/>
		<result property="cmmnGrade" column="CMMN_GRADE"/>
		<result property="cmmnEmpClsf" column="CMMN_EMP_CLSF"/>
	</resultMap>
	
	<!-- 교외체험학습 관련 학부모와 학생의 정보 -->
	<select id="studentInfo" parameterType="vwStdntStdnprntVO" resultType="vwStdntStdnprntVO">
		/* kr.or.ddit.approval.mapper.studentInfo */
		SELECT SCHUL_CODE
		     , SCHUL_NM
		     , STDNT_ID
		     , MBER_NM
		     , CMMN_GRADE
		     , CLAS_CODE
		     , CLAS_NM
		     , CLAS_IN_NO
		     , STDNPRNT_ID
		     , STDNPRNT_NM
		     , MOBLPHON_NO
		     , FN_CMMN_CODE_TO_NM(CMMN_DETAIL_CODE) CMMN_DETAIL_CODE
		     , CLAS_STDNT_CODE
		  FROM VW_STDNT_STDNPRNT
		 WHERE 1 = 1
		   AND STDNPRNT_ID = #{stdnprntId}
		   AND CLAS_CODE = #{clasCode}
		   AND CLAS_STDNT_CODE = #{clasStdntCode} 
	</select>
	
	<insert id="insertDoc" parameterType="sanctnDocVO">
		<selectKey keyProperty="docCode" order="BEFORE" resultType="String">
			SELECT 'SD'||TRIM(TO_CHAR(NVL(MAX(SUBSTR(DOC_CODE,3)),0)+1,'000000'))
			FROM SANCTN_DOC
		</selectKey>
		
		INSERT INTO SANCTN_DOC 
        ( 
            DOC_CODE
          , STDNT_ID
          , EXPRN_LRN_BGNDE
          , LRN_STLE
          , PURPS
          , DSTN
          , STDNPRNT_ID
          , DOC_CN
          , RQST_DE
          , SCHUL_CODE
          , TCHER_SANCTN
          , TCHER_ID
          , DEPUTY_PRNCPAL_SANCTN
          , DEPUTY_PRNCPAL_ID
          , CMMN_DOC_KND
          , CLAS_STDNT_CODE
          , CMMN_PROCESS_STTUS
          , DOC_REJECT
          , ATCH_FILE_CODE
          , ATCH_FILE_SN
          , EXPRN_LRN_ENDDE
        )
        VALUES 
        (
            #{docCode}
          , #{stdntId}
          , #{exprnLrnBgnde}
          , #{lrnStle}
          , #{purps}
          , #{dstn}
          , #{stdnprntId}
          , #{docCn}
          , #{rqstDe}
          , #{schulCode}
          , ''
          , ''
          , ''
          , ''
          , #{cmmnDocKnd}
          , #{clasStdntCode}
          , 'A11001'
          , ''
          , #{atchFileCode}
          , #{atchFileSn}
          , #{exprnLrnEndde}
        )
	</insert>
	
	<!-- 학부모-체험학습 문서 목록 데이터 -->	
	<select id="loadSanctnDocList" resultType="sanctnDocVO">
		/* kr.or.ddit.approval.mapper.loadSanctnDocList */
		WITH T AS(              
		    SELECT ROW_NUMBER() OVER(ORDER BY DOC_CODE ASC) AS RNUM
		         , DOC_CODE
		         , STDNT_ID
		         , EXPRN_LRN_BGNDE
		         , LRN_STLE
		         , PURPS
		         , DSTN
		         , STDNPRNT_ID
		         , DOC_CN
		         , RQST_DE
		         , SCHUL_CODE
		         , TCHER_SANCTN
		         , TCHER_ID
		         , DEPUTY_PRNCPAL_SANCTN
		         , DEPUTY_PRNCPAL_ID
		         , FN_CMMN_CODE_TO_NM(CMMN_DOC_KND) CMMN_DOC_KND
		         , CLAS_STDNT_CODE
		         , FN_CMMN_CODE_TO_NM(CMMN_PROCESS_STTUS) CMMN_PROCESS_STTUS
		         , DOC_REJECT
		         , ATCH_FILE_CODE
		         , ATCH_FILE_SN
		         , EXPRN_LRN_ENDDE
		    FROM SANCTN_DOC
		    WHERE 1 = 1
		    AND CLAS_STDNT_CODE = #{clasStdntCode}
		    <if test="exprnLrnBgndeRb != 'bgndeBeforeAll'">
			AND (
				<choose>
					<when test="exprnLrnBgndeRb == 'bgndeBefore7'">TO_CHAR(EXPRN_LRN_BGNDE, 'YYYY-MM-DD') BETWEEN SYSDATE-7 AND SYSDATE</when>
					<when test="exprnLrnBgndeRb == 'bgndeBefore30'">TO_CHAR(EXPRN_LRN_BGNDE, 'YYYY-MM-DD') BETWEEN SYSDATE-30 AND SYSDATE</when>
					<otherwise>TO_CHAR(EXPRN_LRN_BGNDE, 'YYYY-MM-DD') BETWEEN #{bgndeStartDate} AND #{bgndeEndDate}</otherwise>
				</choose>
			)
			</if>
		    <if test="exprnLrnEnddeRb != 'enddeBeforeAll'">
			AND (
				<choose>
					<when test="exprnLrnEnddeRb == 'enddeBefore7'">TO_CHAR(EXPRN_LRN_ENDDE, 'YYYY-MM-DD') BETWEEN SYSDATE-7 AND SYSDATE</when>
					<when test="exprnLrnEnddeRb == 'enddeBefore30'">TO_CHAR(EXPRN_LRN_ENDDE, 'YYYY-MM-DD') BETWEEN SYSDATE-30 AND SYSDATE</when>
					<otherwise>TO_CHAR(EXPRN_LRN_ENDDE, 'YYYY-MM-DD') BETWEEN #{enddeStartDate} AND #{enddeEndDate}</otherwise>
				</choose>
			)
			</if>
		    <if test="rqstDeRb != 'rqstDeBeforeAll'">
			AND (
				<choose>
					<when test="rqstDeRb == 'rqstDeBefore7'">TO_CHAR(RQST_DE, 'YYYY-MM-DD') BETWEEN SYSDATE-7 AND SYSDATE</when>
					<when test="rqstDeRb == 'rqstDeBefore30'">TO_CHAR(RQST_DE, 'YYYY-MM-DD') BETWEEN SYSDATE-30 AND SYSDATE</when>
					<otherwise>TO_CHAR(RQST_DE, 'YYYY-MM-DD') BETWEEN #{rqstDeStartDate} AND #{rqstDeEndDate}</otherwise>
				</choose>
			)
			</if>
			AND (
			    <foreach collection="cmmnProcessSttusCB" item="sttus" index="index" separator=" OR ">
			        <choose>
			            <when test="sttus == 'sttusSuccess'">
			                (CMMN_PROCESS_STTUS = 'A11002')
			            </when>
			            <when test="sttus == 'sttusWait'">
			                (CMMN_PROCESS_STTUS = 'A11001')
			            </when>
			            <when test="sttus == 'sttusCompensate'">
			            	(CMMN_PROCESS_STTUS = 'A11003')
			            </when>
			            <when test="sttus == 'sttusDeny'">
			            	(CMMN_PROCESS_STTUS = 'A11004')
			            </when>
			            <when test="sttus == 'sttusIng'">
			            	(CMMN_PROCESS_STTUS = 'A11005')
			            </when>
			            <otherwise>
			                (  CMMN_PROCESS_STTUS = 'A11001' 
			                OR CMMN_PROCESS_STTUS = 'A11002' 
			                OR CMMN_PROCESS_STTUS = 'A11003' 
			                OR CMMN_PROCESS_STTUS = 'A11004' 
			                OR CMMN_PROCESS_STTUS = 'A11005'
			                )
			            </otherwise>
			        </choose> 
			    </foreach>
			)
		    <if test="keyword != null || keyword == ''">
		    AND (
		    	<choose>
		    		<when test="searchCondition == 'purps'"> PURPS LIKE '%' || #{keyword} || '%' </when>
		    		<when test="searchCondition == 'dstn'">  DSTN LIKE '%' || #{keyword} || '%' </when>
		    		<otherwise>
		    		(
		    				PURPS LIKE '%' || #{keyword} || '%'
		    			OR	DSTN LIKE '%' || #{keyword} || '%'
		    		)
		    		</otherwise>
		    	</choose>
		    )
		    </if>
		    ORDER BY RNUM DESC
		)
		SELECT T.* FROM T
		WHERE  T.RNUM BETWEEN (#{currentPage}*10) - (10 - 1) AND (#{currentPage}*10)
	</select>
	
	<select id="getApprovalTotal" parameterType="sanctnDocSearchVO" resultType="int">
		/* kr.or.ddit.approval.mapper.getApprovalTotal */
		SELECT 
		    COUNT(DOC_CODE)
		  FROM
		    SANCTN_DOC
		 WHERE 1 = 1
		   AND CLAS_STDNT_CODE = #{clasStdntCode}
			<if test="exprnLrnBgndeRb != 'bgndeBeforeAll'">
			AND (
				<choose>
					<when test="exprnLrnBgndeRb == 'bgndeBefore7'">TO_CHAR(EXPRN_LRN_BGNDE, 'YYYY-MM-DD') BETWEEN SYSDATE-7 AND SYSDATE</when>
					<when test="exprnLrnBgndeRb == 'bgndeBefore30'">TO_CHAR(EXPRN_LRN_BGNDE, 'YYYY-MM-DD') BETWEEN SYSDATE-30 AND SYSDATE</when>
					<otherwise>TO_CHAR(EXPRN_LRN_BGNDE, 'YYYY-MM-DD') BETWEEN #{bgndeStartDate} AND #{bgndeEndDate}</otherwise>
				</choose>
			)
			</if>
		    <if test="exprnLrnEnddeRb != 'enddeBeforeAll'">
			AND (
				<choose>
					<when test="exprnLrnEnddeRb == 'enddeBefore7'">TO_CHAR(EXPRN_LRN_ENDDE, 'YYYY-MM-DD') BETWEEN SYSDATE-7 AND SYSDATE</when>
					<when test="exprnLrnEnddeRb == 'enddeBefore30'">TO_CHAR(EXPRN_LRN_ENDDE, 'YYYY-MM-DD') BETWEEN SYSDATE-30 AND SYSDATE</when>
					<otherwise>TO_CHAR(EXPRN_LRN_ENDDE, 'YYYY-MM-DD') BETWEEN #{enddeStartDate} AND #{enddeEndDate}</otherwise>
				</choose>
			)
			</if>
		    <if test="rqstDeRb != 'rqstDeBeforeAll'">
			AND (
				<choose>
					<when test="rqstDeRb == 'rqstDeBefore7'">TO_CHAR(RQST_DE, 'YYYY-MM-DD') BETWEEN SYSDATE-7 AND SYSDATE</when>
					<when test="rqstDeRb == 'rqstDeBefore30'">TO_CHAR(RQST_DE, 'YYYY-MM-DD') BETWEEN SYSDATE-30 AND SYSDATE</when>
					<otherwise>TO_CHAR(RQST_DE, 'YYYY-MM-DD') BETWEEN #{rqstDeStartDate} AND #{rqstDeEndDate}</otherwise>
				</choose>
			)
			</if>
			AND (
			    <foreach collection="cmmnProcessSttusCB" item="sttus" index="index" separator=" OR ">
			        <choose>
			            <when test="sttus == 'sttusSuccess'">
			                (CMMN_PROCESS_STTUS = 'A11002')
			            </when>
			            <when test="sttus == 'sttusWait'">
			                (CMMN_PROCESS_STTUS = 'A11001')
			            </when>
			            <when test="sttus == 'sttusCompensate'">
			            	(CMMN_PROCESS_STTUS = 'A11003')
			            </when>
			            <when test="sttus == 'sttusDeny'">
			            	(CMMN_PROCESS_STTUS = 'A11004')
			            </when>
			            <when test="sttus == 'sttusIng'">
			            	(CMMN_PROCESS_STTUS = 'A11005')
			            </when>
			            <otherwise>
			                (  CMMN_PROCESS_STTUS = 'A11001' 
			                OR CMMN_PROCESS_STTUS = 'A11002' 
			                OR CMMN_PROCESS_STTUS = 'A11003' 
			                OR CMMN_PROCESS_STTUS = 'A11004' 
			                OR CMMN_PROCESS_STTUS = 'A11005'
			                )
			            </otherwise>
			        </choose> 
			    </foreach>
			)
		    <if test="keyword != null || keyword == ''">
		    AND (
		    	<choose>
		    		<when test="searchCondition == 'purps'"> PURPS LIKE '%' || #{keyword} || '%' </when>
		    		<when test="searchCondition == 'dstn'">  DSTN LIKE '%' || #{keyword} || '%' </when>
		    		<otherwise>
		    		(
		    				PURPS LIKE '%' || #{keyword} || '%'
		    			OR	DSTN LIKE '%' || #{keyword} || '%'
		    		)
		    		</otherwise>
		    	</choose>
		    )
		    </if>		  
	</select>
	
</mapper>